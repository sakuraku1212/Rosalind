# -*- coding: utf-8 -*-
"""Finding a Shared Spliced Motif.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mEPhx23JDeEv-6EtB67Qn4BdFHFCQm_o

Finding a Shared Spliced Motif   https://rosalind.info/problems/lcsq/
"""

try:
    import google.colab
    # Running on Google Colab, so install Biopython first
    !pip install biopython
except ImportError:
    pass

from google.colab import drive
drive.mount('/content/drive')

from Bio import SeqIO
#data=SeqIO.parse('/content/drive/MyDrive/Colab_Notebooks/Rosalind/Sample_Dataset/Finding_a_Shared_Spliced_Motif.txt', 'fasta') #small test data
data=SeqIO.parse('/content/drive/MyDrive/Colab_Notebooks/Rosalind/Dataset/rosalind_lcsq.txt','fasta') #data for submission
data=list(data)
s1=data[0].seq
s2=data[1].seq

#use two strings to create a 2D array and compare each character, if same diagonal+1ï¼Œ else take max(max(matrix[n+1][m], matrix[n][m+1])
import numpy as np

matrix=np.zeros((len(s2)+1, len(s1)+1),dtype=int)

for m in range(len(s1)): #length 8
  for n in range(len(s2)): #length 9
    if s2[n]==s1[m]:
      (matrix[n+1][m+1]) = matrix[n][m] + 1
    else:
      matrix[n+1][m+1]=max(matrix[n+1][m], matrix[n][m+1])
lcs_len= matrix[len(s2)][len(s1)]

lcs_len

#based on the 2D array we have above, backforward to get the longest common string
motif=''
m=len(s1)
n=len(s2)
while m >0 and n>0:
  if s1[m-1]==s2[n-1]:
    motif+=s1[m-1]
    m = m-1
    n = n-1
  elif matrix[n-1][m]>matrix[n][m-1]:
    n -= 1
  else:
    m -= 1
motif = motif[::-1]

motif